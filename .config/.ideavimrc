let mapleader=" "
" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" Source your .vimrc
source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=10

" Do incremental searching.
set visualbell
set ignorecase
set smartcase
set incsearch
set hlsearch

set ideamarks
" Don't use Ex mode, use Q for formatting.
map Q gq

set clipboard^=unnamedplus,unnamed

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
" Leap
map s <Action>(flash.search)
" Plug 'acejump/AceJump'
" Surround
set surround
" NERDTree
set NERDTree
" Highlight F T etc
set quickscope
set which-key

"" Configure quickscope
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
"let g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

let g:highlightedyank_highlight_duration = "1000"

" AceJump
" Press `S` in normal mode to activate AceJump mode before the caret
" nmap S <Action>(AceBackwardAction)
" Press `s` in normal mode to activate AceJump mode after the caret
" nmap s <Action>(AceForwardAction)

" NERDTree
nmap <leader>nt :NERDTreeToggle<CR>
nmap <leader>nf :NerdTreeFocus<CR>
nmap <leader>nc :NERDTreeClose<CR>
nmap <leader>nd :action TOpenDir<CR>

" My Stuff
" no timeout for which key
set notimeout

" Escape search highlighting
nmap <ESC><ESC> :nohl<CR>

" Buffer management
nmap <leader>bk :bd<CR>
nmap <leader>bn :bnext<CR>
nmap <leader>bp :bprev<CR>
nnoremap <leader>ba :action CloseAllEditorsButActive<cr>
nnoremap <leader>z :action ToggleZenMode<CR>

" Git management
nnoremap <leader>tb :action Annotate<cr>

" Search and Find
nnoremap <leader>fg :action FindInPath<CR>
nnoremap <leader>fa :action SearchEverywhere<CR>
nnoremap <leader>ff :action GotoFile<CR>
nnoremap <leader>fc :action GotoClass<CR>
nnoremap <leader>fr :action RecentFiles<CR>
nnoremap <leader>fu :action FindUsages<CR>
nnoremap <leader>fU :action ShowUsages<CR>
nnoremap <leader>fI :action ShowImplementations<CR>
nnoremap <leader>fs :action GoToSymbol<CR>
nnoremap zt :action ExpandCollapseToggleAction<CR>
nnoremap <C-Space> :action EditorChooseLookupItem<CR>
map K <Action>(ShowHoverInfo)
nmap <C-o> :action Back<CR>
nmap <C-i> :action Forward<CR>
nnoremap <leader>pd :action QuickImplementations<CR>
nnoremap zz :action EditorScrollToCenter<CR>

" Navigate & go to
nnoremap <leader>glc :action JumpToLastChange<CR>
nnoremap <leader>gi :action GotoImplementation<CR>
nnoremap <leader>gd :action GotoDeclaration<CR>
nnoremap <leader>gt :action GotoTypeDeclaration<CR>
map <leader>gs :action GoToSuperMethod<cr>
nnoremap H :action PreviousTab<CR>
nnoremap L :action NextTab<CR>
nnoremap [e :action GotoPreviousError<cr>
nnoremap ]e :action GotoNextError<cr>
nnoremap [[ :action MethodUp<cr>
nnoremap ]] :action MethodDown<cr>
map <leader>ns <Action>(ShowNavBar)
map <leader>fb <Action>(Switcher)
map <leader>fp <Action>(ManageRecentProjects)

" View
map <leader>fo :action FileStructurePopup<cr>
map <leader>ld :action ShowErrorDescription<CR>
map zc <Action>(CollapseRegion)
map zo <Action>(ExpandRegion)
map <C-x> <Action>(HideAllWindows)

" terminal
nnoremap <leader>tt :action ActivateTerminalToolWindow<CR>
nnoremap <leader>tnt :action Terminal.OpenInTerminal<CR>

" Formatting
map <leader>fm <Action>(CodeFormatGroup)

" Splits
map <leader>sv <Action>(SplitVertically)
map <leader>sh <Action>(SplitHorizontally)
map <leader>su <Action>(Unsplit)

" Window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

" vim
nnoremap <Leader>vt :action VimFindActionIdAction<CR>
nnoremap <Leader>va :action VimActions<CR>
nmap <leader>vr <Action>(IdeaVim.ReloadVimRc.reload)

" Gradle
map <leader>eg <Action>(Gradle.ExecuteTask)

" Run and test
map <leader>trc <Action>(RunClass)
map <leader>trd <Action>(DebugClass)
map <leader>db <Action>(ToggleLineBreakpoint)

" To sort
nmap <leader>ci <Action>(InspectCode)
nmap <leader>ck <Action>(QuickJavaDoc)
nmap <leader>cr <Action>(RefactoringMenu)
nmap <leader>ct <Action>(ExpressionTypeInfo)
nmap <leader>cg <Action>(Generate)
nmap <leader>tz <Action>(ToggleZenMode)
nmap <leader>cp <Action>(ParameterInfo)
nmap <leader>cl <Action>(Refactorings.QuickListPopupAction)
nmap <leader>ca <Action>(ShowIntentionActions)
nmap <leader>sw <Action>(SurroundWith)

map <leader>ra <Action>(RunAnything)
map <leader>rr <Action>(Rerun)
map <leader>rc <Action>(ChooseRunConfiguration)
map <leader>rm <Action>(RunMenu)
map <leader>rl <Action>(RecentLocations)

map <leader>+ <Action>(EditorIncreaseFontSizeGlobal)
map <leader>- <Action>(EditorDecreaseFontSizeGlobal)
map <leader>= <Action>(EditorResetFontSizeGlobal)

nmap <leader>bs <Action>(ShowBookmarks)

" Git
nmap <leader>Gc <Action>(Vcs.Show.Local.Changes)
nmap <leader>Gb <Action>(Git.Branches)
nmap <leader>Gf <Action>(Git.Fetch)
nmap <leader>Gp <Action>(Vcs.Push)
nmap <leader>GP <Action>(Git.Commit.And.Push.Executor)
nmap <leader>Go <Action>(Github.View.Pull.Request)
nmap <leader>Gm <Action>(VcsGroups)
noremap <leader>Gl :action Vcs.Show.Log<CR>

nmap <leader>wr <Action>(actions.GoldenRatioApplyAction)
nmap <leader>wt <Action>(actions.GoldenRatioToggleAction)

" Harpoon
nmap <leader>hm <Action>(ca.alexgirard.harpoonIJ.mainGroup)
nmap <leader>hs <Action>(ShowHarpoon)
nmap <leader>hS <Action>(SelectHarpoonItem)
nmap <leader>ha <Action>(AddToHarpoon)
