* Global settings
** Fonts
Doom-big-font is used for the big-mode with SPC t b
Variable-pitch is something for org mode

#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Fira Code" :size 21 :weight 'medium)
doom-big-font (font-spec :family "Fira Code" :size 32)
doom-variable-pitch-font (font-spec :family "Fira Code" :size 18))
(setq doom-theme 'doom-one)
#+end_src

** Theme
#+begin_src emacs-lisp
(setq doom-theme 'doom-one)
#+end_src

** Line numbers type
Relative across the board.

#+begin_src emacs-lisp
(setq display-line-numbers-type `relative)
#+end_src
** Modeline
#+begin_src emacs-lisp
(after! doom-modeline (setq doom-modeline-height 45)
  (setq
        doom-modeline-buffer-file-name-style 'file-name
        doom-modeline-major-mode-icon t
        doom-modeline-battery t)
  (display-battery-mode))
#+end_src
** Org mode
*** Line numbers
#+begin_src emacs-lisp
(after! org
  (add-hook! 'org-mode-hook #'(lambda () (display-line-numbers-mode 0)))
  (setq org-ellipsis " â–¾"))
#+end_src

* Development settings
** Syntax highlghting
*** Tree-sitter
Tree sitter globally always on.
Tree sitter highlighting on on tree-sitter module load.

#+begin_src emacs-lisp
(after! tree-sitter
  (global-tree-sitter-mode)
  (add-hook! 'tree-sitter-after-on-hook #'tree-sitter-hl-mode))
#+end_src

** LSP
*** UI
#+begin_src emacs-lisp
(after! lsp-mode
  (setq lsp-ui-peek-always-show t)
  (setq lsp-headerline-breadcrumb-enable t)
  (setq lsp-headerline-breadcrumb-icons-enable t)
  (setq lsp-inlay-hint-enable t))
#+end_src

** Linting
*** Flycheck
Hack into flycheck-checker-get in order to inject python checkers, like ruff, etc.

#+begin_src emacs-lisp
(defvar-local my/flycheck-local-cache nil)

(defun my/flycheck-checker-get (fn checker property)
  (or (alist-get property (alist-get checker my/flycheck-local-cache))
      (funcall fn checker property)))

(after! syntax
  (advice-add 'flycheck-checker-get :around 'my/flycheck-checker-get)
  (add-hook 'lsp-managed-mode-hook
            (lambda ()
              (when (derived-mode-p 'python-mode)
                (setq my/flycheck-local-cache '((lsp . ((next-checkers . (python-ruff)))))))))
  (add-hook 'lsp-managed-mode-hook
            (lambda ()
              (when (derived-mode-p 'sh-mode)
                (setq my/flycheck-local-cache '((lsp . ((next-checkers . (sh-posix-bash))))))))))

#+end_src

** Formatting
*** Aphelia
Overwrite default aphelia formatters set for ruff. Hook them into python-mode.

#+begin_src emacs-lisp
(after! format
  (require 'apheleia)
  (setf (alist-get 'ruff apheleia-formatters)
        '("ruff" "format" "--silent" "-"))
  (setf (alist-get 'ruff-isort apheleia-formatters)
        '("ruff" "check" "--fix" "--select" "I" "-"))
  (setf (alist-get 'python-mode apheleia-mode-alist)
        '(ruff ruff-isort))
  (setf (alist-get 'python-ts-mode apheleia-mode-alist)
        '(ruff ruff-isort)))
#+end_src
* Evil
** Highlight yank
#+begin_src emacs-lisp
(after! evil
  (defun my/evil-yank-advice (func beg end &rest args)
    (pulse-momentary-highlight-region beg end)
    (apply func beg end args))
  (advice-add 'evil-yank :around 'my/evil-yank-advice))
#+end_src
